{"version":3,"file":"static/js/750.ca105197.chunk.js","mappings":"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","sources":["components/Toaster.jsx","components/loadMoreBtn/loadMoreBtn.styles.jsx","components/loadMoreBtn/LoadMoreBtn.jsx","components/reviews/Reviews.styles.jsx","components/reviews/Reviews.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import React from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const Toaster = ({ message }) => {\n  toast(message);\n\n  return (\n    <div>\n      <ToastContainer />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LoadMoreSection = styled.div`\n  display: flex;\n  padding: 10px;\n  justify-content: center;\n`;\n\nexport const LoadMoreBtn = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &&:hover,\n  &&:focus {\n    background-color: #303f9f;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { LoadMoreBtn, LoadMoreSection } from './loadMoreBtn.styles';\n\nexport const LoadMore = ({ onBtnClick }) => {\n  return (\n    <LoadMoreSection>\n      <LoadMoreBtn type=\"button\" onClick={onBtnClick}>\n        Load more\n      </LoadMoreBtn>\n    </LoadMoreSection>\n  );\n};\n\nLoadMore.propTypes = {\n  onBtnClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ReviewList = styled.ul`\n  padding: 15px;\n  box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.75);\n  border-left: 1px solid gray;\n  border-top: 1px solid gray;\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const ReviewItem = styled.li`\n  padding: 10px;\n  box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.75);\n  border-left: 1px solid gray;\n  border-top: 1px solid gray;\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const Author = styled.div`\n  width: 60px;\n  height: 90px;\n`;\n\nexport const ReviewAvatar = styled.img``;\n\nexport const ReviewTxt = styled.p`\n  /* display: flex;\n  flex-direction: column; */\n  width: 85%;\n`;\n\nexport const DatesInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { LoaderBox } from '../loader/Loader.styles';\nimport Loader from '../loader/Loader';\nimport { Toaster } from '../Toaster';\nimport { LoadMore } from '../loadMoreBtn/LoadMoreBtn';\nimport { nanoid } from 'nanoid';\nimport {\n  ReviewList,\n  ReviewItem,\n  ReviewAvatar,\n  Author,\n  DatesInfo,\n  ReviewTxt,\n} from '../reviews/Reviews.styles';\n\nconst Reviews = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [review, setReview] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(1);\n\n  const { movieId } = useParams();\n  const mainPhotoPath = 'https://image.tmdb.org/t/p/original';\n\n  const onBtnClick = e => {\n    let pageNumber = page;\n    pageNumber += 1;\n    setPage(pageNumber);\n    window.scrollTo(0, 1000);\n  };\n\n  useEffect(() => {\n    async function Response() {\n      await axios\n        .get(\n          `\nhttps://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=6c2e7884d8582c075e4f6889ea94f7ad&language=en-US&page=${page}`\n        )\n        .then(obj => {\n          setReview(prevState => [...prevState, ...obj.data.results]);\n          setTotalPage(obj.data.total_pages);\n        })\n        .catch(error => {\n          setErrorMessage(error);\n        })\n        .finally(setLoading(false));\n    }\n    Response();\n  }, [movieId, page]);\n\n  return (\n    <>\n      {isLoading && (\n        <LoaderBox>\n          <Loader />\n        </LoaderBox>\n      )}\n      <ReviewList>\n        {review.length === 0 ? (\n          <h3>Sorry. Is no review...</h3>\n        ) : (\n          review.map(item => (\n            <ReviewItem key={nanoid(8)}>\n              <Author>\n                {!item.author_details.avatar_path ||\n                item.author_details.avatar_path.length > 50 ? (\n                  <ReviewAvatar\n                    src=\"https://www.gravatar.com/avatar/96c2e0e4ac98450f9e8e3c0a0a40aad8.jpg\"\n                    alt=\"userAvatar\"\n                  />\n                ) : (\n                  <ReviewAvatar\n                    src={`${mainPhotoPath}${item.author_details.avatar_path}`}\n                    alt=\"userAvatar\"\n                  />\n                )}\n                <h5>{item.author}</h5>\n              </Author>\n\n              <ReviewTxt>{item.content}</ReviewTxt>\n\n              <DatesInfo>\n                <h5>Posted</h5>\n                <p>{item.created_at.substr(0, 10)}</p>\n                <h5>Updated</h5>\n                <p>{item.updated_at.substr(0, 10)}</p>\n              </DatesInfo>\n            </ReviewItem>\n          ))\n        )}\n      </ReviewList>\n      {review.length > 0 && page < totalPage && (\n        <LoadMore onBtnClick={onBtnClick} />\n      )}\n      {errorMessage && <Toaster message={errorMessage} />}\n    </>\n  );\n};\n\nexport default Reviews;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Toaster","message","toast","LoadMoreSection","styled","LoadMoreBtn","LoadMore","onBtnClick","type","onClick","ReviewList","ReviewItem","Author","ReviewAvatar","ReviewTxt","DatesInfo","useState","isLoading","setLoading","errorMessage","setErrorMessage","review","setReview","page","setPage","totalPage","setTotalPage","movieId","useParams","useEffect","axios","then","obj","prevState","data","results","total_pages","catch","error","finally","Response","Loader","length","map","item","author_details","avatar_path","src","alt","author","content","created_at","substr","updated_at","nanoid","e","pageNumber","window","scrollTo","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}