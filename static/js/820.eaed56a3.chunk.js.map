{"version":3,"file":"static/js/820.eaed56a3.chunk.js","mappings":"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","sources":["components/Toaster.jsx","components/loadMoreBtn/loadMoreBtn.styles.jsx","components/loadMoreBtn/LoadMoreBtn.jsx","components/searchbar/SearchBar.styles.jsx","components/searchbar/SearchBar.jsx","components/pages/Movies.styled.jsx","components/pages/Movies.jsx"],"sourcesContent":["import React from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const Toaster = ({ message }) => {\n  toast(message);\n\n  return (\n    <div>\n      <ToastContainer />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LoadMoreSection = styled.div`\n  display: flex;\n  padding: 10px;\n  justify-content: center;\n`;\n\nexport const LoadMoreBtn = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &&:hover,\n  &&:focus {\n    background-color: #303f9f;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { LoadMoreBtn, LoadMoreSection } from './loadMoreBtn.styles';\n\nexport const LoadMore = ({ onBtnClick }) => {\n  return (\n    <LoadMoreSection>\n      <LoadMoreBtn type=\"button\" onClick={onBtnClick}>\n        Load more\n      </LoadMoreBtn>\n    </LoadMoreSection>\n  );\n};\n\nLoadMore.propTypes = {\n  onBtnClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FindSection = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.75);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-block;\n  width: 40px;\n  height: 40px;\n  border: 0;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-color: #bbb7ee;\n  opacity: 0.4;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &&:hover,\n  &&:focus {\n    opacity: 1;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &&::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { RiFindReplaceLine } from 'react-icons/ri';\nimport { useState } from 'react';\n\nimport {\n  FindSection,\n  SearchForm,\n  SearchFormBtn,\n  SearchInput,\n} from './SearchBar.styles';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [target, setTarget] = useState('');\n\n  const handleChange = item => {\n    setTarget(item.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(target);\n  };\n\n  return (\n    <FindSection className=\"searchbar\">\n      <SearchForm className=\"form\" onSubmit={handleSubmit}>\n        <SearchFormBtn type=\"submit\" className=\"button\">\n          <RiFindReplaceLine></RiFindReplaceLine>\n        </SearchFormBtn>\n\n        <SearchInput\n          className=\"input\"\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          target={target}\n          onChange={handleChange}\n        />\n      </SearchForm>\n    </FindSection>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link as MovieLink } from 'react-router-dom';\n\nexport const StyledLink = styled(MovieLink)`\n  color: #270b97;\n  text-decoration: none;\n  height: 100%;\n`;\n\nexport const MainSection = styled.section`\n  padding: 15px;\n  box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.75);\n  border-left: 1px solid gray;\n  border-top: 1px solid gray;\n`;\n\nexport const FilmList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const FilmCard = styled.div`\n  padding: 10px;\n  box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.75);\n  border-left: 1px solid gray;\n  border-top: 1px solid gray;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  height: 100%;\n`;\n\nexport const FilmImg = styled.img`\n  height: 100%;\n`;\n","import { Toaster } from '../Toaster';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { SearchBar } from '../searchbar/SearchBar';\nimport { LoaderBox } from '../loader/Loader.styles';\nimport Loader from '../loader/Loader';\nimport { LoadMore } from '../loadMoreBtn/LoadMoreBtn';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  StyledLink,\n  MainSection,\n  FilmList,\n  FilmCard,\n  FilmImg,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [collections, setCollections] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams({});\n\n  const productName = searchParams.get('targetSubmit') ?? '';\n  const targetPage = searchParams.get('page');\n\n  const [isLoading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const [totalPage, setTotalPage] = useState(1);\n\n  const mainPhotoPath = 'https://image.tmdb.org/t/p/original';\n\n  const onBtnClick = () => {\n    const usedTarget = searchParams.get('targetSubmit');\n    const usedPage = searchParams.get('page');\n    const newPage = Number(usedPage) + 1;\n\n    setSearchParams({ targetSubmit: usedTarget, page: newPage });\n  };\n\n  const onSubmit = targetSubmit => {\n    if (targetSubmit !== productName) {\n      setCollections([]);\n    }\n\n    const nextParams = targetSubmit !== '' ? { targetSubmit } : {};\n\n    setSearchParams({ targetSubmit: nextParams.targetSubmit, page: 1 });\n\n    setErrorMessage(null);\n  };\n\n  useEffect(() => {\n    if (!productName) {\n      return;\n    }\n    setLoading(true);\n\n    async function Response() {\n      await axios\n        .get(\n          `https://api.themoviedb.org/3/search/movie?api_key=6c2e7884d8582c075e4f6889ea94f7ad&query=${productName}&language=en-US&page=${targetPage}`\n        )\n        .then(obj => {\n          if (obj.data.results.length === 0) {\n            setErrorMessage(\n              'There are no movies for this request, please try another one!!!'\n            );\n            return;\n          } else {\n            setCollections(obj.data.results);\n            setTotalPage(obj.data.total_pages);\n            setErrorMessage(null);\n          }\n        })\n        .catch(error => {\n          setErrorMessage(error);\n        })\n        .finally(setLoading(false));\n    }\n    Response();\n  }, [targetPage, productName]);\n\n  return (\n    <MainSection>\n      <SearchBar onSubmit={onSubmit}></SearchBar>\n\n      {isLoading && (\n        <LoaderBox>\n          <Loader />\n        </LoaderBox>\n      )}\n\n      <FilmList>\n        {collections.map(item => (\n          <StyledLink\n            to={`${item.id}`}\n            key={item.id}\n            state={{ from: `/movies?${searchParams}` }}\n          >\n            <FilmCard>\n              {item.poster_path ? (\n                <FilmImg\n                  src={`${mainPhotoPath}${item.poster_path}`}\n                  alt={item.original_title}\n                ></FilmImg>\n              ) : (\n                <FilmImg\n                  src={\n                    'https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png'\n                  }\n                  alt={item.original_title}\n                ></FilmImg>\n              )}\n              <h3>{item.original_title}</h3>\n              <p>Release data: {item.release_date}</p>\n            </FilmCard>\n          </StyledLink>\n        ))}\n      </FilmList>\n\n      {collections.length > 0 && targetPage < totalPage && (\n        <LoadMore onBtnClick={onBtnClick} />\n      )}\n\n      {errorMessage && <Toaster message={errorMessage} />}\n    </MainSection>\n  );\n};\n\nexport default Movies;\n"],"names":["Toaster","message","toast","LoadMoreSection","styled","LoadMoreBtn","LoadMore","onBtnClick","type","onClick","FindSection","SearchForm","SearchFormBtn","SearchInput","SearchBar","onSubmit","useState","target","setTarget","className","e","preventDefault","autocomplete","autoFocus","placeholder","onChange","item","value","StyledLink","MovieLink","MainSection","FilmList","FilmCard","FilmImg","collections","setCollections","useSearchParams","searchParams","setSearchParams","productName","get","targetPage","isLoading","setLoading","errorMessage","setErrorMessage","totalPage","setTotalPage","useEffect","axios","then","obj","data","results","length","total_pages","catch","error","finally","Response","targetSubmit","page","Loader","map","to","id","state","from","poster_path","src","alt","original_title","release_date","usedTarget","usedPage","newPage","Number"],"sourceRoot":""}