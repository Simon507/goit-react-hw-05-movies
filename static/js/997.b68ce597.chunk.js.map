{"version":3,"file":"static/js/997.b68ce597.chunk.js","mappings":"+MAKaA,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAGxB,OAFAC,EAAAA,EAAAA,IAAMD,IAGJ,0BACE,SAAC,KAAD,KAGL,C,wOCTKE,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,+OAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,ECvBYL,GAAaC,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,yPAiBVO,EAAcP,EAAAA,GAAAA,QAAH,6LASXQ,EAASR,EAAAA,GAAAA,IAAH,8KAQNS,EAAeT,EAAAA,GAAAA,IAAH,+GAOZU,EAAoBV,EAAAA,GAAAA,QAAH,6JAOjBW,EAAeX,EAAAA,GAAAA,GAAH,iICiEzB,EAlGc,WAAO,IAAD,IAClB,GAAsCY,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,MAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAGFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAyB7C,OArBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,8FACQC,EAAAA,EAAAA,IAAA,6CAEoCP,EAFpC,6DAIHQ,MAAK,SAAAC,GACJd,EAAec,EAAIC,MAEnBC,QAAQC,IAAIH,EAAIC,KACjB,IACAG,OAAM,SAAAC,GACLf,EAAgBe,EACjB,IACAC,QAAQlB,GAAW,IAbxB,4CAHc,sBACdA,GAAW,GADG,mCAkBdmB,EACD,GAAE,CAAChB,KAGF,gCACGJ,IACC,SAAC,IAAD,WACE,SAACqB,EAAA,EAAD,OAGJ,SAAClC,EAAD,CAAUC,GAAIkB,EAAd,sBAEA,UAACd,EAAD,WACGM,EAAYwB,aACX,SAAC7B,EAAD,CACE8B,IAAG,UAnCS,uCAmCT,OAAqBzB,EAAYwB,aACpCE,IAAK1B,EAAY2B,kBAGnB,SAAChC,EAAD,CACE8B,IAAI,0EACJC,IAAK1B,EAAY2B,kBAIrB,UAAC/B,EAAD,WACGI,EAAY2B,iBACX,0BACG3B,EAAY2B,eADf,KAEG3B,EAAY4B,aAAaC,OAAO,EAAG,GAFtC,QAKF,wCAAgB7B,EAAY8B,iBAC5B,sCACA,uBAAI9B,EAAY+B,YAChB,oCACA,wBACG/B,EAAYgC,QACXhC,EAAYgC,OAAOC,KAAI,SAAAC,GAAI,OAAI,uBAAkBA,EAAKC,MAAfD,EAAKE,GAAjB,aAKnC,UAACvC,EAAD,YACE,UAACC,EAAD,YACE,SAAC,EAAD,CAAYR,GAAI,OAAQoB,MAAO,CAAEC,KAAMH,GAAvC,mBAGA,SAAC,EAAD,CAAYlB,GAAI,UAAWoB,MAAO,CAAEC,KAAMH,GAA1C,yBAIF,SAAC,EAAA6B,SAAD,CACEC,UACE,SAAC,IAAD,WACE,SAACf,EAAA,EAAD,MAHN,UAOE,SAAC,KAAD,SAIHnB,IAAgB,SAACrB,EAAA,EAAD,CAASC,QAASoB,MAGxC,C","sources":["components/Toaster.jsx","components/backLink/BackLink.jsx","components/pages/Movie.styles.jsx","components/pages/Movie.jsx"],"sourcesContent":["import React from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const Toaster = ({ message }) => {\n  toast(message);\n\n  return (\n    <div>\n      <ToastContainer />\n    </div>\n  );\n};\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: #4d08bc;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\nimport { Link as RouteLink } from 'react-router-dom';\n\nexport const StyledLink = styled(RouteLink)`\n  color: black;\n  text-decoration: none;\n  font-size: 25px;\n  margin-right: 25px;\n  margin-bottom: 15px;\n\n  &&:hover,\n  &&:focus {\n    color: rgb(64, 136, 207);\n  }\n\n  &.active {\n    color: rgb(60, 0, 255);\n  }\n`;\n\nexport const MainSection = styled.section`\n  padding: 15px;\n  box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.75);\n  border-left: 1px solid gray;\n  border-top: 1px solid gray;\n  display: flex;\n  gap: 50px;\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n  height: 450px;\n  box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.75);\n  border-left: 1px solid gray;\n  border-top: 1px solid gray;\n`;\n\nexport const MainTxtBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 15px;\n`;\n\nexport const AdditionalSection = styled.section`\n  padding: 15px;\n  box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.75);\n  border-left: 1px solid gray;\n  border-top: 1px solid gray;\n`;\n\nexport const AdditionalUl = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 40px;\n  font-size: 18 px;\n`;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { LoaderBox } from '../loader/Loader.styles';\nimport Loader from '../loader/Loader';\nimport { Toaster } from '../Toaster';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\n\nimport { BackLink } from '../backLink/BackLink';\nimport {\n  StyledLink,\n  MainSection,\n  AdditionalSection,\n  Poster,\n  MainTxtBlock,\n  AdditionalUl,\n} from '../pages/Movie.styles';\n\nconst Movie = () => {\n  const [targetMovie, setTargetMovie] = useState('');\n  const [isLoading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const mainPhotoPath = 'https://image.tmdb.org/t/p/original';\n\n  useEffect(() => {\n    setLoading(true);\n\n    async function Response() {\n      await axios\n        .get(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=6c2e7884d8582c075e4f6889ea94f7ad&language=en-US`\n        )\n        .then(obj => {\n          setTargetMovie(obj.data);\n\n          console.log(obj.data);\n        })\n        .catch(error => {\n          setErrorMessage(error);\n        })\n        .finally(setLoading(false));\n    }\n    Response();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && (\n        <LoaderBox>\n          <Loader />\n        </LoaderBox>\n      )}\n      <BackLink to={backLinkHref}>Go back</BackLink>\n\n      <MainSection>\n        {targetMovie.poster_path ? (\n          <Poster\n            src={`${mainPhotoPath}${targetMovie.poster_path}`}\n            alt={targetMovie.original_title}\n          />\n        ) : (\n          <Poster\n            src=\"https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png\"\n            alt={targetMovie.original_title}\n          />\n        )}\n\n        <MainTxtBlock>\n          {targetMovie.original_title && (\n            <h2>\n              {targetMovie.original_title} (\n              {targetMovie.release_date.substr(0, 4)})\n            </h2>\n          )}\n          <p>User Score: {targetMovie.vote_average}</p>\n          <h4>Overview</h4>\n          <p>{targetMovie.overview}</p>\n          <h5>Genres</h5>\n          <ul>\n            {targetMovie.genres &&\n              targetMovie.genres.map(item => <p key={item.id}>{item.name}</p>)}\n          </ul>\n        </MainTxtBlock>\n      </MainSection>\n\n      <AdditionalSection>\n        <AdditionalUl>\n          <StyledLink to={'cast'} state={{ from: backLinkHref }}>\n            Cast\n          </StyledLink>\n          <StyledLink to={'reviews'} state={{ from: backLinkHref }}>\n            Reviews\n          </StyledLink>\n        </AdditionalUl>\n        <Suspense\n          fallback={\n            <LoaderBox>\n              <Loader />\n            </LoaderBox>\n          }\n        >\n          <Outlet />\n        </Suspense>\n      </AdditionalSection>\n\n      {errorMessage && <Toaster message={errorMessage} />}\n    </>\n  );\n};\n\nexport default Movie;\n"],"names":["Toaster","message","toast","StyledLink","styled","Link","BackLink","to","children","size","RouteLink","MainSection","Poster","MainTxtBlock","AdditionalSection","AdditionalUl","useState","targetMovie","setTargetMovie","isLoading","setLoading","errorMessage","setErrorMessage","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","axios","then","obj","data","console","log","catch","error","finally","Response","Loader","poster_path","src","alt","original_title","release_date","substr","vote_average","overview","genres","map","item","name","id","Suspense","fallback"],"sourceRoot":""}