{"version":3,"file":"static/js/154.5d4e94e4.chunk.js","mappings":"+MAKaA,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAGxB,OAFAC,EAAAA,EAAAA,IAAMD,IAGJ,0BACE,SAAC,KAAD,KAGL,C,oLCVYE,EAAcC,EAAAA,GAAAA,QAAH,6JAOXC,EAAWD,EAAAA,GAAAA,GAAH,wRAaRE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,qEAKVI,EAAWJ,EAAAA,GAAAA,EAAH,wNAURK,EAAUL,EAAAA,GAAAA,IAAH,sB,4BC+BpB,EAxDiB,WACf,OAAgCM,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,MAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAuBA,OAnBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,8FACQC,EAAAA,EAAAA,IAAA,4FAIHC,MAAK,SAAAC,GACJJ,EAAYI,EAAIC,KAAKC,QACtB,IACAC,OAAM,SAAAC,GACLV,EAAgBU,EACjB,IACAC,QAAQb,GAAW,IAXxB,4CAHc,sBACdA,GAAW,GADG,mCAgBdc,EACD,GAAE,KAGD,UAACvB,EAAD,WACGQ,IACC,SAAC,IAAD,WACE,SAACgB,EAAA,EAAD,OAGJ,SAACtB,EAAD,UACGU,EAASa,KAAI,SAAAC,GAAI,OAChB,SAACvB,EAAD,CACEwB,GAAE,iBAAYD,EAAKE,IAEnBC,MAAO,CAAEC,KAAM,KAHjB,UAKE,UAACzB,EAAD,YACE,SAACC,EAAD,CACEyB,IAAG,UArCK,uCAqCL,OAAqBL,EAAKM,aAC7BC,IAAKP,EAAKQ,kBAEZ,wBAAKR,EAAKQ,kBACV,0CAAkBR,EAAKS,oBATpBT,EAAKE,GAHI,MAiBnBlB,IAAgB,SAACb,EAAA,EAAD,CAASC,QAASY,MAGxC,C","sources":["components/Toaster.jsx","components/pages/HomeList.styles.jsx","components/pages/HomeList.jsx"],"sourcesContent":["import React from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const Toaster = ({ message }) => {\n  toast(message);\n\n  return (\n    <div>\n      <ToastContainer />\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { Link as RouteLink } from 'react-router-dom';\n\nexport const MainSection = styled.section`\n  padding: 15px;\n  box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.75);\n  border-left: 1px solid gray;\n  border-top: 1px solid gray;\n`;\n\nexport const FilmList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const StyledLink = styled(RouteLink)`\n  color: #270b97;\n  text-decoration: none;\n`;\n\nexport const FilmCard = styled.p`\n  padding: 10px;\n  box-shadow: 6px 0px 6px 0px rgba(0, 0, 0, 0.75);\n  border-left: 1px solid gray;\n  border-top: 1px solid gray;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const FilmImg = styled.img``;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { LoaderBox } from '../loader/Loader.styles';\nimport {\n  MainSection,\n  FilmList,\n  StyledLink,\n  FilmCard,\n  FilmImg,\n} from '../pages/HomeList.styles';\nimport Loader from '../loader/Loader';\nimport { Toaster } from '../Toaster';\n\nconst HomeList = () => {\n  const [isLoading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [bestList, setBestList] = useState([]);\n\n  const mainPhotoPath = 'https://image.tmdb.org/t/p/original';\n\n  useEffect(() => {\n    setLoading(true);\n\n    async function Response() {\n      await axios\n        .get(\n          `https://api.themoviedb.org/3/trending/movie/day?api_key=6c2e7884d8582c075e4f6889ea94f7ad`\n        )\n        .then(obj => {\n          setBestList(obj.data.results);\n        })\n        .catch(error => {\n          setErrorMessage(error);\n        })\n        .finally(setLoading(false));\n    }\n    Response();\n  }, []);\n\n  return (\n    <MainSection>\n      {isLoading && (\n        <LoaderBox>\n          <Loader />\n        </LoaderBox>\n      )}\n      <FilmList>\n        {bestList.map(item => (\n          <StyledLink\n            to={`movies/${item.id}`}\n            key={item.id}\n            state={{ from: '/' }}\n          >\n            <FilmCard>\n              <FilmImg\n                src={`${mainPhotoPath}${item.poster_path}`}\n                alt={item.original_title}\n              ></FilmImg>\n              <h3>{item.original_title}</h3>\n              <p>Release data: {item.release_date}</p>\n            </FilmCard>\n          </StyledLink>\n        ))}\n      </FilmList>\n      {errorMessage && <Toaster message={errorMessage} />}\n    </MainSection>\n  );\n};\n\nexport default HomeList;\n"],"names":["Toaster","message","toast","MainSection","styled","FilmList","StyledLink","RouteLink","FilmCard","FilmImg","useState","isLoading","setLoading","errorMessage","setErrorMessage","bestList","setBestList","useEffect","axios","then","obj","data","results","catch","error","finally","Response","Loader","map","item","to","id","state","from","src","poster_path","alt","original_title","release_date"],"sourceRoot":""}